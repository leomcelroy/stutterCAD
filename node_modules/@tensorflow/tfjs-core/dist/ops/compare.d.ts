import { Tensor } from '../tensor';
import { TensorLike } from '../types';
declare function notEqual_<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
declare function notEqualStrict_<T extends Tensor>(a: T | TensorLike, b: T | TensorLike): T;
declare function less_<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
declare function lessStrict_<T extends Tensor>(a: T | TensorLike, b: T | TensorLike): T;
declare function equal_<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
declare function equalStrict_<T extends Tensor>(a: T | TensorLike, b: T | TensorLike): T;
declare function lessEqual_<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
declare function lessEqualStrict_<T extends Tensor>(a: T | TensorLike, b: T | TensorLike): T;
declare function greater_<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
declare function greaterStrict_<T extends Tensor>(a: T | TensorLike, b: T | TensorLike): T;
declare function greaterEqual_<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
declare function greaterEqualStrict_<T extends Tensor>(a: T | TensorLike, b: T | TensorLike): T;
export declare const equal: typeof equal_;
export declare const equalStrict: typeof equalStrict_;
export declare const greater: typeof greater_;
export declare const greaterEqual: typeof greaterEqual_;
export declare const greaterEqualStrict: typeof greaterEqualStrict_;
export declare const greaterStrict: typeof greaterStrict_;
export declare const less: typeof less_;
export declare const lessEqual: typeof lessEqual_;
export declare const lessEqualStrict: typeof lessEqualStrict_;
export declare const lessStrict: typeof lessStrict_;
export declare const notEqual: typeof notEqual_;
export declare const notEqualStrict: typeof notEqualStrict_;
export {};
